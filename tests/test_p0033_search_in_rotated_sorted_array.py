import pytest
from leetcode.p0033_search_in_rotated_sorted_array import search


@pytest.mark.parametrize(('nums', 'target', 'index'), (
    ([], 1, -1),
    ([1], 1, 0),

    ([4,5,6,7,0,1,2], 3, -1),
    ([4,5,6,7,0,1,2], 0, 4),
    ([4,5,6,7,0,1,2], 1, 5),
    ([4,5,6,7,0,1,2], 7, 3),
    ([4,5,6,7,0,1,2], 8, -1),
    ([4,5,6,7,0,1,2], 6, 2),

    ([1,2,3,4,5,6,7], 8, -1),
    ([1,2,3,4,5,6,7], 1, 0),
    ([1,2,3,4,5,6,7], 5, 4),

    ([10,20,30,40,50], 25, -1),
    ([10,20,30,40,50], 5, -1),
    ([10,20,30,40,50], 55, -1),

    ([99,100,101,1,2,3,4,5,6,7,8,9,10,11,12,13,14], 0, -1),
    ([99,100,101,1,2,3,4,5,6,7,8,9,10,11,12,13,14], 1, 3),
    ([99,100,101,1,2,3,4,5,6,7,8,9,10,11,12,13,14], 98, -1),
    ([99,100,101,1,2,3,4,5,6,7,8,9,10,11,12,13,14], 15, -1),
    ([99,100,101,1,2,3,4,5,6,7,8,9,10,11,12,13,14], 102, -1),

))
def test_search(nums, target, index):
    assert search(nums, target) == index


@pytest.mark.parametrize(('nums'), (
    [],
    [1],
    [4,5,6,7,0,1,2],
    [1,2,3,4,5,6,7],
    [10,20,30,40,50],
    [99,100,101,1,2,3,4,5,6,7,8,9,10,11,12,13,14],
))
def test_search_all(nums):
    for ix, num in enumerate(nums):
        assert search(nums, num) == ix
